// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleFine.DataAccess.Context;

namespace VehicleFine.DataAccess.Migrations
{
    [DbContext(typeof(VehicleFineContext))]
    partial class VehicleFineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VehicleFine.Entities.Concrete.Brand", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Brand1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Brand");

                    b.Property<string>("Model")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Year")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("VehicleFine.Entities.Concrete.Owner", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TelephoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("VehicleFine.Entities.Concrete.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Plate")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("VehicleFine.Entities.Concrete.VehicleFineInformation", b =>
                {
                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VehicleFineRealizationDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("VehicleFineReasonId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleFineStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.HasIndex("VehicleFineReasonId");

                    b.HasIndex("VehicleFineStatusId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleFineInformations");
                });

            modelBuilder.Entity("VehicleFine.Entities.Concrete.VehicleFineReason", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VehicleFineReasons");
                });

            modelBuilder.Entity("VehicleFine.Entities.Concrete.VehicleFineStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Detail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("VehicleFineStatuses");
                });

            modelBuilder.Entity("VehicleFine.Entities.Concrete.Vehicle", b =>
                {
                    b.HasOne("VehicleFine.Entities.Concrete.Brand", "Brand")
                        .WithMany("Vehicles")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK_Vehicles_Brands");

                    b.HasOne("VehicleFine.Entities.Concrete.Owner", "Owner")
                        .WithMany("Vehicles")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("FK_Vehicles_Owners");

                    b.Navigation("Brand");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("VehicleFine.Entities.Concrete.VehicleFineInformation", b =>
                {
                    b.HasOne("VehicleFine.Entities.Concrete.VehicleFineReason", "VehicleFineReason")
                        .WithMany()
                        .HasForeignKey("VehicleFineReasonId")
                        .HasConstraintName("FK_VehicleFines_VehicleFineReasons");

                    b.HasOne("VehicleFine.Entities.Concrete.VehicleFineStatus", "VehicleFineStatus")
                        .WithMany()
                        .HasForeignKey("VehicleFineStatusId")
                        .HasConstraintName("FK_VehicleFines_VehicleFineStatuses");

                    b.HasOne("VehicleFine.Entities.Concrete.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .HasConstraintName("FK_VehicleFines_Vehicles");

                    b.Navigation("Vehicle");

                    b.Navigation("VehicleFineReason");

                    b.Navigation("VehicleFineStatus");
                });

            modelBuilder.Entity("VehicleFine.Entities.Concrete.Brand", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("VehicleFine.Entities.Concrete.Owner", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
